name: CMake Build

on:
  push:
    branches: [master]

  pull_request:
    branches: [master]

  workflow_dispatch:

jobs:
  build-ubuntu:
    name: Build Ubuntu
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: 2.1. Obtaining OpenSees Source Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      # - name: Needed Applications and Libraries are already satisfied.
      - name: Conan 1.x
        run: pip install "conan<2.0"
      - name: matplotlib
        run: pip install matplotlib
      - name: numpy
        run: pip install numpy
      - name: scipy
        run: pip install scipy
      - name: 2.4.2. Building the OpenSees Applications and Python module
        run: |
          mkdir build
          cd build
          conan install .. --build missing # conan executables location is different.
          cmake ..
          cmake --build . --target OpenSees -j8
          cmake --build . --target OpenSeesPy -j8
          mv lib/OpenSeesPy.so lib/opensees.so
          pwd
          cp /opt/hostedtoolcache/Python/3.11.11/x64/bin/python3 ./
      - name: Verification OpenSeesPySP   # Simple Sanity Test
        run: |
          export PYTHONPATH="./build/lib/"
          pwd
          /home/runner/work/OpenSees/OpenSees/build/python3 -c "import sys; print(sys.path)"
#          python3 ./EXAMPLES/ExamplePython/example_ground_motion.py
      - name: Valgrind Checker
        uses: Ximaz/valgrind-action@1.2.1
        with:
            binary_path: "./python3"
            binary_args: "./EXAMPLES/ExamplePython/example_ground_motion.py"
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
            name: OpenSees_Ubuntu
            path: |
              ./build/lib/ground_motion.png
#        # Simple MP sanity test
#        - name: Verification OpenSeesPyMP
#          run: |
#            mpiexec -np 2 python ../EXAMPLES/ExamplePython/example_mpi_paralleltruss_explicit.py
